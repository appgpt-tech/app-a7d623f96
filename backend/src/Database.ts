//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { PostEntity } from './db/Post.entity';
import { CommentsEntity } from './db/Comments.entity';
import { GroupsEntity } from './db/Groups.entity';
import { PagesEntity } from './db/Pages.entity';
import { MessagesEntity } from './db/Messages.entity';
import { VideosEntity } from './db/Videos.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      PostEntity,
      CommentsEntity,
      GroupsEntity,
      PagesEntity,
      MessagesEntity,
      VideosEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Post: [
        {
          Likes: 1,
          Comments: 1,
          Reactions: 'Reactions 1',
          Share: false,
          Repost: false,
          id: 96,
        },
        {
          Likes: 2,
          Comments: 2,
          Reactions: 'Reactions 2',
          Share: true,
          Repost: true,
          id: 4,
        },
        {
          Likes: 3,
          Comments: 3,
          Reactions: 'Reactions 3',
          Share: false,
          Repost: true,
          id: 50,
        },
        {
          Likes: 4,
          Comments: 4,
          Reactions: 'Reactions 4',
          Share: false,
          Repost: false,
          id: 77,
        },
        {
          Likes: 5,
          Comments: 5,
          Reactions: 'Reactions 5',
          Share: true,
          Repost: false,
          id: 85,
        },
      ],
      Comments: [
        { ThumbsUp: 1, ThumbsDown: 1, Reply: 'Reply 1', id: 85 },
        { ThumbsUp: 2, ThumbsDown: 2, Reply: 'Reply 2', id: 7 },
        { ThumbsUp: 3, ThumbsDown: 3, Reply: 'Reply 3', id: 75 },
        { ThumbsUp: 4, ThumbsDown: 4, Reply: 'Reply 4', id: 3 },
        { ThumbsUp: 5, ThumbsDown: 5, Reply: 'Reply 5', id: 63 },
      ],
      Groups: [
        {
          Post: 1,
          Share: true,
          Comment: 1,
          Reply: 'Reply 1',
          Reacts: 'Reacts 1',
          id: 76,
        },
        {
          Post: 2,
          Share: false,
          Comment: 2,
          Reply: 'Reply 2',
          Reacts: 'Reacts 2',
          id: 36,
        },
        {
          Post: 3,
          Share: false,
          Comment: 3,
          Reply: 'Reply 3',
          Reacts: 'Reacts 3',
          id: 82,
        },
        {
          Post: 4,
          Share: true,
          Comment: 4,
          Reply: 'Reply 4',
          Reacts: 'Reacts 4',
          id: 3,
        },
        {
          Post: 5,
          Share: true,
          Comment: 5,
          Reply: 'Reply 5',
          Reacts: 'Reacts 5',
          id: 88,
        },
      ],
      Pages: [
        { Post: 1, Contact: 'Contact 1', RequestForLikes: false, id: 3 },
        { Post: 2, Contact: 'Contact 2', RequestForLikes: false, id: 76 },
        { Post: 3, Contact: 'Contact 3', RequestForLikes: false, id: 18 },
        { Post: 4, Contact: 'Contact 4', RequestForLikes: true, id: 75 },
        { Post: 5, Contact: 'Contact 5', RequestForLikes: false, id: 20 },
      ],
      Messages: [
        { Post: 1, Delete: false, Share: false, Reply: 'Reply 1', id: 57 },
        { Post: 2, Delete: false, Share: true, Reply: 'Reply 2', id: 47 },
        { Post: 3, Delete: true, Share: true, Reply: 'Reply 3', id: 14 },
        { Post: 4, Delete: false, Share: true, Reply: 'Reply 4', id: 88 },
        { Post: 5, Delete: true, Share: true, Reply: 'Reply 5', id: 66 },
      ],
      Videos: [
        { Share: false, Edit: false, Delete: true, Post: 1, id: 78 },
        { Share: false, Edit: false, Delete: false, Post: 2, id: 76 },
        { Share: true, Edit: false, Delete: true, Post: 3, id: 53 },
        { Share: true, Edit: true, Delete: false, Post: 4, id: 76 },
        { Share: true, Edit: true, Delete: false, Post: 5, id: 40 },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('PostEntity', data.Post);
      await this.SeedResource('CommentsEntity', data.Comments);
      await this.SeedResource('GroupsEntity', data.Groups);
      await this.SeedResource('PagesEntity', data.Pages);
      await this.SeedResource('MessagesEntity', data.Messages);
      await this.SeedResource('VideosEntity', data.Videos);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
